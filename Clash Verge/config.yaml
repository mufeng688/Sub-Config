#==========================================
# @ConfigName        自用 Clash Verge 配置文件
# @Author            @Semporia
# @Feedback          请通过 Issues 反馈问题[其它方式一概无视] https://github.com/Semporia/Clash/issues💡
# @UpdateTime        2024年6月7日 09:03:06
# @Function          支持手动选择、自动测速、广告屏蔽、兜底分流、按国家分组节点、多机场订阅等等   
# @ConfigVersion     1.6.5
#==========================================

# 本地HTTP(S)代理服务器端口
port: 7890

# 本地SOCKS5代理服务器端口
socks-port: 7891

# 适用于Linux和macOS的透明代理服务器端口
# redir-port: 7892

# HTTP(S)和SOCKS5服务器使用相同端口
mixed-port: 7890

# 本地SOCKS5/HTTP(S)服务器的身份验证
# authentication:
#  - "user1:pass1"
#  - "user2:pass2"

# 设置为true允许来自其他局域网IP地址的连接
allow-lan: false

# 仅当`allow-lan`为`true`时适用
# '*': 绑定所有IP地址
# 192.168.122.11: 绑定单个IPv4地址
# "[aaaa::a8aa:ff:fe09:57d8]": 绑定单个IPv6地址
bind-address: '*'

# Clash路由工作模式
# rule: 基于规则的包路由
# global: 所有包将被转发到单一端点
# direct: 直接将包转发到互联网
mode: Rule

# Clash默认将日志打印到标准输出
# info / warning / error / debug / silent
log-level: info

# 设置为false时，解析器不会将主机名翻译为IPv6地址
ipv6: false

# RESTful web API监听地址
external-controller: 127.0.0.1:59446

# 相对于配置目录的路径或绝对路径，你可以在其中放置一些静态Web资源。
# Clash核心会在`${API}/ui`路径下提供服务。
# external-ui: folder

# RESTful API的密钥（可选）
# 通过指定HTTP头部`Authorization: Bearer ${secret}`进行身份验证
# 如果RESTful API监听0.0.0.0，请务必设置密钥
# secret: 357e4d16-90c4-4afe-bb32-2e7b30e051f8

# 出接口名称
# interface-name: en0

# DNS服务器和连接建立的静态主机，仅在`dns.enhanced-mode`为`redir-host`时生效。
#
# 支持通配符主机名（如：*.clash.dev, *.foo.*.example.com）
# 非通配符域名优先级高于通配符域名
# 如：foo.example.com > *.example.com > .example.com
# 备注：+.foo.com 等同于 .foo.com 和 foo.com
hosts:
  'mtalk.google.com': 108.177.125.188
  # '*.clash.dev': 127.0.0.1
  # '.dev': 127.0.0.1
  # 'alpha.clash.dev': '::1'

# DNS服务器设置
# 该部分为可选项，如果不存在，则DNS服务器将被禁用。
dns:
  enable: false
  listen: 0.0.0.0:53
  # ipv6: false # 当设置为false时，对AAAA记录的查询将返回空结果

  # 这些名称服务器用于解析以下DNS名称服务器的主机名。
  # 仅指定IP地址
  default-nameserver:
    - 223.5.5.5
    - 119.29.29.29
  enhanced-mode: fake-ip # redir-host或fake-ip
  fake-ip-range: 198.18.0.1/16 # 假IP地址池CIDR

  # 在此列表中的主机名将不会使用假IP进行解析
  # 即这些域名的查询将始终返回真实IP地址
  # fake-ip-filter:
  #   - '*.lan'
  #   - localhost.ptlogin2.qq.com

  # 支持UDP、TCP、DoT、DoH。可以指定连接的端口。
  # 所有DNS查询直接发送到名称服务器，不涉及代理。
  # Clash会返回第一个收集到的结果。
  nameserver:
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query

  # 当存在`fallback`时，DNS服务器将同时向`nameservers`和`fallback`部分的服务器发送并发请求。
  # 当GEOIP国家不是`CN`时，使用`fallback`服务器的答案。
  # fallback:
  #   - tcp://1.1.1.1

  # 如果使用`nameserver`部分的服务器解析出的IP地址在以下指定的子网中，
  # 它们将被认为是无效的，并改用`fallback`服务器的结果。
  #
  # 当`fallback-filter.geoip`为true且解析的IP地址GEOIP为`CN`时，使用`nameserver`解析的IP地址。
  #
  # 如果`fallback-filter.geoip`为false，始终使用`fallback`名称服务器的结果，并丢弃`nameservers`的答案。
  #
  # 这是对DNS污染攻击的对策。
  
  fallback-filter:
    geoip: true
    geoip-code: CN
    ipcidr:
      - 240.0.0.0/4



# 策略组引用
Pr: &a3 {type: select, proxies: [♻️ Auto]}
Pro: &a1 {type: http, interval: 28800, health-check: {enable: true, url: http://www.gstatic.com/generate_204, interval: 1800}}
Auto: &a4 {type: url-test, lazy: true, url: http://www.gstatic.com/generate_204, interval: 300, use: [Subscribe]}
Man: &a2 {type: select, use: [Subscribe]}
classical: &a6 {type: http, behavior: classical, interval: 28800}
domain: &a5 {type: http, behavior: domain, interval: 28800}
ipcidr: &a7 {type: http, behavior: ipcidr, interval: 28800}

proxy-providers:
  Subscribe:
    <<: *a1
    url: 替换为订阅链接
    path: ./proxy_providers/Airport.yaml
    
proxies: null
proxy-groups:

  - {name: ♻️ Auto, <<: *a4}
  - {name: HK, <<: *a4, filter: "香港|HK|(?i)Hong"}
  - {name: JP, <<: *a4, filter: "日本|东京|JP|(?i)Japan"}   
  - {name: TW, <<: *a4, filter: "台湾|TW|(?i)Taiwan"}
  - {name: US, <<: *a4, filter: "美国|US|(?i)States|American"}
  - {name: SG, <<: *a4, filter: "新加坡|SG|(?i)Singapore"}
  - {name: TH, <<: *a4, filter: "泰国"}
  - {name: AE, <<: *a4, filter: "阿联酋|迪拜"}
  - {name: TR, <<: *a4, filter: "土耳其|TR|(?i)Turkey"}

  - {name: 🚀 Manual, <<: *a2}
  - {name: Adobe, type: select, proxies: [REJECT] }
  - {name: Apple, type: select, proxies: [US], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Social_Media/Apple.png }
  - {name: Amazon, type: select, proxies: [US], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Social_Media/Amazon.png }
  - {name: China, type: select, proxies: [DIRECT]}
  - {name: DingTalk, type: select, proxies: [US], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/DingTalk.png }
  - {name: Facebook, type: select, proxies: [US], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Social_Media/Facebook.png }
  - {name: GitHub, type: select, proxies: [US], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Social_Media/GitHub.png }
  - {name: Google, type: select, proxies: [US], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Google_Suite/Google.png }
  - {name: Microsoft, type: select, proxies: [US], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/Microsoft.png }
  - {name: Netflix, type: select, proxies: [US], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/Netflix.png }
  - {name: NetEase, type: select, proxies: [DIRECT], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/NetEase.png }
  - {name: Spotify, type: select, proxies: [US], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Social_Media/Spotify.png }
  - {name: Speedtest, type: select, proxies: [DIRECT], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/Speedtest.png }
  - {name: Steam, type: select, proxies: [DIRECT], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/TencentVideo.png }
  - {name: Telegram, type: select, proxies: [US], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Social_Media/Telegram.png }
  - {name: Twitter, type: select, proxies: [US], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Social_Media/Twitter.png }
  - {name: Tencent, type: select, proxies: [JP], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/Tencent.png }
  - {name: TencentVideo, type: select, proxies: [DIRECT], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/TencentVideo.png }
  - {name: YouTube, type: select, proxies: [US], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Google_Suite/YouTube.png }
  - {name: WhatsApp, type: select, proxies: [US], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Social_Media/Whatsapp.png }
  - {name: WeChat, type: select, proxies: [JP], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/WeChat.png }
  - {name: PayPal, type: select, proxies: [US], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Social_Media/Paypal.png }
  - {name: Zoom, type: select, proxies: [DIRECT], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/Zoom.png }
  - {name: ChinaIP, type: select, proxies: [DIRECT]}
  - {name: 🌏 Global, <<: *a3}
  - {name: MATCH, <<: *a3}

rule-providers:
  Adobe: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Semporia/Clash@master/Rule/Adobe.yaml, path: ./ruleset/Adobe.yaml}
  Apple: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Semporia/Clash@master/Rule/Apple.yaml, path: ./ruleset/Apple.yaml}
  Amazon: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Semporia/Clash@master/Rule/Amazon.yaml, path: ./ruleset/Amazon.yaml}
  China: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Semporia/Clash@master/Rule/China.yaml, path: ./ruleset/China.yaml}
  DingTalk: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Semporia/Clash@master/Rule/DingTalk.yaml, path: ./ruleset/DingTalk.yaml}
  Facebook: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Semporia/Clash@master/Rule/Facebook.yaml, path: ./ruleset/Facebook.yaml}
  GitHub: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Semporia/Clash@master/Rule/GitHub.yaml, path: ./ruleset/GitHub.yaml}
  Google: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Semporia/Clash@master/Rule/Google.yaml, path: ./ruleset/Google.yaml}
  Microsoft: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Semporia/Clash@master/Rule/Microsoft.yaml, path: ./ruleset/Microsoft.yaml}
  Netflix: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Semporia/Clash@master/Rule/Netflix.yaml, path: ./ruleset/Netflix.yaml}
  NetEase: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Semporia/Clash@master/Rule/NetEase.yaml, path: ./ruleset/NetEase.yaml}
  Spotify: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Semporia/Clash@master/Rule/Spotify.yaml, path: ./ruleset/Spotify.yaml}
  Speedtest: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Semporia/Clash@master/Rule/Speedtest.yaml, path: ./ruleset/Speedtest.yaml}
  Steam: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Semporia/Clash@master/Rule/Steam.yaml, path: ./ruleset/Steam.yaml}
  Telegram: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Semporia/Clash@master/Rule/Telegram.yaml, path: ./ruleset/Telegram.yaml}
  Twitter: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Semporia/Clash@master/Rule/Twitter.yaml, path: ./ruleset/Twitter.yaml}
  Tencent: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Semporia/Clash@master/Rule/Tencent.yaml, path: ./ruleset/Tencent.yaml}
  TencentVideo: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Semporia/Clash@master/Rule/TencentVideo.yaml, path: ./ruleset/TencentVideo.yaml}
  YouTube: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Semporia/Clash@master/Rule/YouTube.yaml, path: ./ruleset/YouTube.yaml}
  WhatsApp: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Semporia/Clash@master/Rule/WhatsApp.yaml, path: ./ruleset/WhatsApp.yaml}
  WeChat: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Semporia/Clash@master/Rule/WeChat.yaml, path: ./ruleset/WeChat.yaml}
  PayPal: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Semporia/Clash@master/Rule/PayPal.yaml, path: ./ruleset/PayPal.yaml}
  Zoom: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Semporia/Clash@master/Rule/Zoom.yaml, path: ./ruleset/Zoom.yaml}
  ChinaIP: {<<: *a7, url: https://cdn.jsdelivr.net/gh/soffchen/GeoIP2-CN@release/clash-rule-provider.yml, path: ./ruleset/ChinaIP.yaml}
  Proxy: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Semporia/Clash@master/Rule/Proxy.yaml, path: ./ruleset/Proxy.yaml}
  
rules:
# 分流
  - RULE-SET,Adobe,REJECT
  - RULE-SET,Apple,Apple
  - RULE-SET,Amazon,Amazon
  - RULE-SET,DingTalk,DingTalk
  - RULE-SET,Facebook,Facebook
  - RULE-SET,GitHub,GitHub
  - RULE-SET,Google,Google
  - RULE-SET,Microsoft,Microsoft
  - RULE-SET,Netflix,Netflix
  - RULE-SET,NetEase,NetEase
  - RULE-SET,Spotify,Spotify
  - RULE-SET,Speedtest,DIRECT 
  - RULE-SET,Steam,DIRECT
  - RULE-SET,Telegram,Telegram
  - RULE-SET,Twitter,Twitter
  - RULE-SET,Tencent,Tencent
  - RULE-SET,TencentVideo,DIRECT
  - RULE-SET,YouTube,YouTube
  - RULE-SET,WhatsApp,WhatsApp
  - RULE-SET,WeChat,WeChat
  - RULE-SET,PayPal,PayPal
  - RULE-SET,Zoom,Zoom
  - RULE-SET,China,DIRECT
  - RULE-SET,ChinaIP,DIRECT
  - RULE-SET,Proxy,🌏 Global

 # Local Area Network
  - IP-CIDR,192.168.0.0/16,DIRECT
  - IP-CIDR,10.0.0.0/8,DIRECT
  - IP-CIDR,172.16.0.0/12,DIRECT
  - IP-CIDR,127.0.0.0/8,DIRECT
  - IP-CIDR,100.64.0.0/10,DIRECT
  - IP-CIDR,224.0.0.0/4,DIRECT
  - IP-CIDR,8.218.42.178/32,DIRECT
  - IP-CIDR,119.28.28.28/32,DIRECT
  - IP-CIDR,182.254.116.0/24,DIRECT

  # （可选）使用来自 ipipdotnet 的 ChinaIP 以解决数据不准确的问题，使用 ChinaIP.yaml 时可禁用下列直至（包括）「GEOIP,CN」规则

  - GEOIP,CN,DIRECT
  - MATCH,MATCH
