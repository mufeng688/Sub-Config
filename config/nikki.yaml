# 代理订阅提供者 (Proxy Providers)
proxy-providers:
  前置订阅: 
    type: http
    url: "" # 代理订阅链接
    interval: 3600 # 1小时自动更新一次节点
    path: ./provider/proxy/prefix.yaml # 缓存文件路径
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 600
    override:
      udp: true
      additional-prefix: "🚀 | "

  落地订阅:
    type: http
    url: "" # 代理订阅链接
    interval: 3600 # 1小时自动更新一次节点
    path: ./provider/proxy/land.yaml # 缓存文件路径
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 600
    override:
      udp: true
      dialer-proxy: 前置节点
      additional-prefix: "🏠 | "

  中转订阅: 
    type: http
    url: "" # 代理订阅链接
    interval: 3600 # 1小时自动更新一次节点
    path: ./provider/proxy/transit.yaml # 缓存文件路径
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 600
    override:
      udp: true
      additional-prefix: "✈️ | "

  机场订阅: 
    type: http
    url: "" # 代理订阅链接
    interval: 3600 # 1小时自动更新一次节点
    path: ./provider/proxy/airport.yaml # 缓存文件路径
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 600
    override:
      udp: true
      additional-prefix: "✈️ | "

# 策略组 (Proxy Groups)
proxy-groups:
  - name: "前置节点"
    type: select
    include-all: true
    filter: "🚀" # 保留
    icon: "https://ghfast.top/https://raw.githubusercontent.com/Orz-3/mini/master/Color/Urltest.png"

  - name: "落地节点"
    type: select
    include-all: true
    filter: "🏠" # 保留
    icon: "https://ghfast.top/https://raw.githubusercontent.com/Orz-3/mini/master/Color/China.png"

  - name: "中转节点"
    type: select
    include-all: true
    filter: "✈️" # 保留
    icon: "https://ghfast.top/https://raw.githubusercontent.com/Orz-3/mini/master/Color/Static.png"

  - name: "机场节点"
    type: select
    include-all: true
    filter: "✈️" # 保留
    icon: "https://ghfast.top/https://raw.githubusercontent.com/Orz-3/mini/master/Color/Static.png"

  - name: "全球加速"
    type: select
    proxies: ["前置节点", "落地节点", "中转节点", "机场节点", "DIRECT"]
    icon: "https://ghfast.top/https://raw.githubusercontent.com/Orz-3/mini/master/Color/Global.png"

  - name: "特殊服务"
    type: select
    proxies: ["前置节点", "落地节点", "中转节点", "机场节点", "DIRECT"]
    icon: "https://ghfast.top/https://raw.githubusercontent.com/Orz-3/mini/master/Color/Final.png"

  - name: "AdBlock"
    type: select
    proxies: [REJECT]
    icon: "https://ghfast.top/https://raw.githubusercontent.com/Orz-3/mini/master/Color/Adblock.png" 
  
  - name: "兜底分流"
    type: select
    proxies: ["前置节点", "落地节点", "中转节点", "机场节点", "DIRECT"]
    icon: "https://ghfast.top/https://raw.githubusercontent.com/Orz-3/mini/master/Color/Final.png"

# 规则提供者 (Rule Providers)
rule-providers:
  cn-domain: { behavior: domain, interval: 86400, path: ./provider/rule-set/cn_domain.yaml, format: yaml, type: http, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.yaml" }
  ai-chat-!cn: { behavior: domain, interval: 600,  path: ./provider/rule-set/category-ai-!cn.yaml,format: yaml, type: http,url: "https://ghfast.top/https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-ai-!cn.yaml" }
  fake-ip-filter: { behavior: domain, format: text, interval: 86400,  path: ./provider/rule-set/fake_ip_filter.list,type: http, url: "https://cdn.jsdelivr.net/gh/juewuy/ShellCrash@dev/public/fake_ip_filter.list", }
  custom-direct: { behavior: classical, interval: 86400, path: ./provider/rule-set/custom_direct.yaml, type: http, format: yaml, url: "https://ghfast.top/https://raw.githubusercontent.com/mufeng688/Sub-Config/refs/heads/main/rule/DiyDirect.yaml" }
  custom-proxy: { behavior: classical, interval: 86400, path: ./provider/rule-set/custom_proxy.yaml, type: http, format: yaml, url: "https://ghfast.top/https://raw.githubusercontent.com/mufeng688/Sub-Config/refs/heads/main/rule/DiyProxy.yaml" }
  custom-games: { behavior: classical, interval: 86400, path: ./provider/rule-set/custom_games.yaml, type: http, format: yaml, url: "https://ghfast.top/https://raw.githubusercontent.com/mufeng688/Sub-Config/refs/heads/main/rule/DiyGames.yaml" }

# ----------------------------------------------------------------
# 规则 (Rules)
# ----------------------------------------------------------------
# Clash的核心，按顺序匹配流量，决定其走向哪个策略组。
rules:
  - GEOSITE,category-ads-all,AdBlock
  - GEOIP,private,DIRECT,no-resolve
  - RULE-SET,custom-proxy,特殊服务
  - RULE-SET,custom-direct,DIRECT
  - GEOSITE,microsoft@cn,DIRECT
  - GEOSITE,apple-cn,DIRECT
  - GEOSITE,steam@cn,DIRECT
  - GEOSITE,category-games@cn,DIRECT
  - GEOSITE,onedrive,DIRECT
  - RULE-SET,cn-domain,DIRECT
  - GEOIP,CN,DIRECT
  - GEOSITE,gfw,全球加速
  - GEOSITE,geolocation-!cn,全球加速
  - GEOIP,!CN,全球加速
  - MATCH,兜底分流

# ----------------------------------------------------------------
# 通用配置 (General)
# ----------------------------------------------------------------
# Clash的核心行为、端口、日志等基础设置。
mode: rule
mixed-port: 7890
allow-lan: true
bind-address: "*"
ipv6: false
unified-delay: true
tcp-concurrent: true
log-level: warning
find-process-mode: 'off'
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 15
disable-keep-alive: false
profile:
  store-selected: true
  store-fake-ip: true

# ----------------------------------------------------------------
# 流量嗅探 (Sniffer)
# ----------------------------------------------------------------
# 尝试识别流量的域名，即使请求是基于IP的，从而更准确地应用域名规则。
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]

# ----------------------------------------------------------------
# TUN 模式 (适用于 OpenWrt / 路由器环境)
# ----------------------------------------------------------------
# 创建一个虚拟网卡来接管系统所有TCP/UDP流量，实现真正的全局代理。
tun:
  enable: true
  stack: mixed
  dns-hijack: ["any:53", "tcp://any:53"]
  # 在 OpenWrt 中，路由和重定向通常由iptables/nftables规则手动管理，故设为 false
  auto-route: false
  auto-redirect: false
  auto-detect-interface: false
  # 指定 TUN 虚拟网卡的名称
  device: nikki

# ----------------------------------------------------------------
# DNS 设置
# ----------------------------------------------------------------
# Clash内置的DNS服务器，用于防污染和Fake-IP。
dns:
  enable: true
  listen: :53
  ipv6: false
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-filter-mode: blacklist
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter:
    - 'rule-set:fake-ip-filter'
    - '+.msftconnecttest.com'
    - '+.msftncsi.com'
  default-nameserver:
    - tls://223.5.5.5
    - tls://223.6.6.6
  nameserver:
    - https://cloudflare-dns.com/dns-query
    - https://dns.google/dns-query
  proxy-server-nameserver:
    - https://dns.alidns.com/dns-query
    - https://doh.pub/dns-query
  direct-nameserver:
    - https://dns.alidns.com/dns-query
    - https://doh.pub/dns-query


# ----------------------------------------------------------------
# GEO 数据源 (Geo Data)
# ----------------------------------------------------------------
# GEOIP 和 GEOSITE 规则数据库的设置。
geodata-mode: true
geo-auto-update: true
geo-update-interval: 24
geodata-loader: memconservative
geox-url:
  geoip: https://cdn.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip-lite.dat
  geosite: https://cdn.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat
  mmdb: https://cdn.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country-lite.mmdb
  asn: https://cdn.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/GeoLite2-ASN.mmdb

# ----------------------------------------------------------------
# 外部控制与特定环境配置 (External Control & Environment)
# ----------------------------------------------------------------
# 主要用于 OpenWrt 环境下的 Web UI、API 访问和网络接口绑定。
# 绑定的出口网络接口
interface-name: br-lan
# 网页控制面板 (Dashboard) 名称
external-ui: ui
# 网页控制面板资源文件地址
external-ui-url: https://github.com/Zephyruso/zashboard/releases/latest/download/dist-cdn-fonts.zip
# API 控制器监听地址和端口
external-controller: '[::]:9090'
# API 访问密钥
secret: xymhh
# 清空静态proxies，完全依赖proxy-providers
proxies: null
